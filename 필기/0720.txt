┌──────────────── 복습 ───────────────┐
│<< nodejs						  
│: 서버사이드 스크립트이고, 이벤트 루프 기반의 싱글스레드로 작동한다.  
│
│- 자바스크립트는 함수이다.
│  함수 === 값이다.
│  '변수 = 함수;' 가능
│
│- 콜백함수: 비동기방식에서 사용되는 함수, (non-blocking I/O)
│
│- 애로우 함수: () => {}
│- 객체 만드는 방법: 4가지 방법
│- forEach() 배열함수 / for-in / for-of
│- var: 함수 스코프 ==> let, const: 블럭스코프
└──────────────────────────────────┘
<< 모듈
1. 기본모듈: node에서 제공되는 모듈
2. 내가 만든 모듈
3. 다른 사람들이 만든 모듈 (npmjs.com / 설치필요: npm install 모듈이름 ...)

* 모듈 : 코드를 파일로 분리시켜서 필요할 때 가져와서 사용하는 프로그램 단위
	(require)

	내가 모듈을 만들었어..
	다른 사람들이 사용하게 하고 싶어 <---- 모듈을 내보내는 코드를 작성
	exports / module exports: 객체만 내보낼 수 있음
	한 파일에 여러개의 객체 내보내기 불가능
-------------------------------------------------------------------------------------------
객체생성: my Module
	     name: kim
	     age: 35
	     about(): 나의 이름은 kim이고 나이는 35입니다를 출력하는 함수

다른 파일에서 myModule 가지고 와서 이름하고 나이 출력하기 

module.exports = { }
---------------------------------------------------------------------------------------------
<< 파일읽고 쓰기
1. 파일 모듈  : fs 설치
2. 파일 읽기  readFile 비동기
fs.readFile('data.txt', (err, result)) => {
       if(err) {
	console.log(err)
       } else {		
	console.log(result)
       }
}
: path에 있는 파일을 다 읽은 후 callback함수를 실행해라
3. 파일쓰기 writeFile
-----------------------------------------------------------------
<< 웹서버 만들기   [BasicNode/test6.js]
* 노드는 서버스크립트 언어이므로 서버에서 돌아간다
* 노드에서 기본적으로 http(웹서버 프로토콜)모듈이 내장되어 있음
* http모듈을 이용하면 3줄 정도로 웹서버 만들 수 있음

express: http웹서버 + 편리한 추가기능포함   [BasicNode/test7.js]
1. 사용자 요청이 들어왔을 때 처리하는 방법

* btn.addEventListener('click', function(){})

객체.on('exit', function() {
	console.log('exit);
}

* 사용자 접속: connection 이벤트
* 사용자 요청: request 이벤트
* 사용자 종료: close 이벤트
-----------------------------------------------------
* 정적파일: html, css, img : public 폴더
* 노드의 템플릿엔진: pub /ejs
  스프링의 템플릿엔진: jsp
-----------------------------------------------------
<< express: http모듈 + 편리한 기능들을 추가해서 만든거야
1. 노드의 웹 프레임워크
2. express에서 제공하는 가장 유명한, 강력한 함수: 미들웨어(middleware), 라우터(router)

* 다른 모듈을 설치할 때 (cannot find module 나올 때 )
1) 설치방법: npm i express --save    <== 하면 다른 컴퓨터에서도 실행이 된다?

http://localhost:3000/doc/1.html

